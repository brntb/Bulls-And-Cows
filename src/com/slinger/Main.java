package com.slinger;

import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int codeLength = scanner.nextInt();

        if (codeLength > 10) {
            System.out.println("Error: can't generate a secret number with a length of 11 because there aren't enough unique digits.");
        } else {
            String code = generateCode(codeLength);
            System.out.println("The random secret number is " + code + ".");
        }


//
//        int [] guessResults = findBullsAndCows(code, "3455");
//        int bullCount = guessResults[0];
//        int cowCount = guessResults[0];
//
//        printResults(code, bullCount, cowCount);
    }

    //returns how many bulls and cows are in guess
    //idx = 0 is bulls,
    //idx = 1 is cows
    private static int[] findBullsAndCows(String code, String guess) {
        int bullCount = 0;
        int cowCount = 0;
        //holds bulls and cows
        int[] resultHolder = new int[2];

        for (int i = 0; i < code.length(); i++) {

            if (code.charAt(i) == guess.charAt(i)) {
                bullCount++;
                continue;
            }

            //check for cows
            for (int j = 0; j < code.length(); j++) {
                if (j != i && code.charAt(i) == guess.charAt(j)) {
                    cowCount++;
                    break;
                }
            }
        }

        resultHolder[0] = bullCount;
        resultHolder[1] = cowCount;

        return resultHolder;
    }

    //code is generated by iterating over the pseudoRandomNumber in the reverse order
    //and adding unique digits.
    private static String generateCode(int length) {
        boolean isGenerating = true;
        boolean isGenerated = false;
        long pseudoRandomNumber;
        String strNumber;
        List<Integer> seenDigits = new ArrayList<>();

        while (isGenerating) {
            pseudoRandomNumber = System.nanoTime();
            strNumber = String.valueOf(pseudoRandomNumber);

            for (int i = strNumber.length() - 1; i >= 0; i--) {
                int currentDigit = Character.getNumericValue(strNumber.charAt(i));

                //check if we have seen this digit or if first digit is 0, if so ignore it
                if (seenDigits.contains(currentDigit) || (seenDigits.isEmpty() && currentDigit == 0)) {
                    continue;
                } else {
                    seenDigits.add(currentDigit);
                }

                //check if we have reached desired size
                //and break for loop if we have
                if (seenDigits.size() == length) {
                    isGenerated = true;
                    break;
                }
            }

            if (isGenerated) { //if we have desired length, break loop else go again
                isGenerating = false;
            }
        }

        //have desired digits in list, need to convert to string and return result
        StringBuilder result = new StringBuilder();
        seenDigits.forEach(result::append);
        return result.toString();
    }


    private static void printResults(String code, int bulls, int cows) {
        String secretCode = "The secret code is " + code + ".";
        String result;

        if (cows == 0 && bulls == 0) {
            result = "Grade: None.";
        } else if (bulls != 0 && cows != 0) {
            result = String.format("Grade: %d bulls(s) and %d cow(s). ", bulls, cows);
        } else if (bulls != 0) {
            result = String.format("Grade: %d bulls(s). ", bulls);
        } else {
            result = String.format("Grade: %d cow(s). ", cows);
        }

        System.out.println(result + secretCode);
    }
}
